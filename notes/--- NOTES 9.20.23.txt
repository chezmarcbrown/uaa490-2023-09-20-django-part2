
1e. demoproj/settings.py:
INSTALLED_APPS = [
    'hello',
    'newyear', 
    'tasks',

2. add views david, brian (method in view.py, urls.py)

3. add greet view with name parameter
views.py:
def greet(request, name):
    return HttpResponse(f"Hello, {name}!") 
    #return HttpResponse(f"Hello, {name.capitalize()}!")

urls.py:
urlpatterns = [
    path("", views.index, name="index"),
    path("nicole", views.nicole, name="nicole"),
    path("<str:name>", views.greet, name="greet"),
]

# show effect of order of urls


4. HTML too verbose:
in hello/views.py:
def nicole(request):
    return HttpResponse("<h3>Hello, Nicole!</h3><p>This space is available.</p>")
    
def nicole(request):
    return render(request, "hello/index.html")
create folder templates/hello/index.html

<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Hello!</title>
    </head>
    <body>
        <h3>Hello, Nicole!</h3>  
        <p>This space is available.</p>
    </body>
</html>

5. replace greet with render(req, "hello/greet.html", {"name":name.capitalize()}). create greet.html
def greet(request, name):
    return render(request, "hello/greet.html", {
        "name": name.capitalize()
    })
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Hello!</title>
    </head>
    <body>
        Hello, {{ name }}!
    </body>
</html>

Add style:
<link rel="stylesheet" href="https://cdn.simplecss.org/simple.css"> 


Lots of files is good for separation
----------------------

www.isitchristmas.com - could change the HTML by hand, but let's use logic

1. create classtoday app
python manage.py startapp classtoday

1a) add app to demoproj/settings.py add "classtoday" to INSTALLED_APPS

1b) add to demoproj/urls.py:
urlpatterns = [
    path('admin/', admin.site.urls),
    path("hello/", include("hello.urls")),
    path("tasks/", include("tasks.urls")),
    path("classtoday/", include("classtoday.urls")),
]

create classtoday/index.html:
from django.urls import path
from . import views
urlpatterns = [
    path("", views.index, name="index")
]

2. view.index:
BAD: 
def index(request):
    now = datetime.datetime.now() 
    classtoday = now.weekday() == 1 and now.weekday() == 3 
    return render(request, "classtoday/index.html", {
        "now": now,
        "classtoday": "YES" if classtoday else "NO",
    })

BUGS: and => or; Monday is 0

GOOD:
def index(request):
    now = datetime.datetime.now() 
    return render(request, "classtoday/index.html", {
        "classtoday": now.weekday() == 0 or now.weekday() == 2
    })

3. template classtoday/templates/classtoday/index.html:
Class today? {{ classtoday }}

{% if classtoday %}
    <h1>YES</h1>
{% else %}
    <h1>NO</h1>
{% endif %}

-----------------------------------------------------------------------------------
4. look at HTML source

Issue is that static files are often served by other machines. 
So want to link relative to where static files will be stored.

5. static/classtoday/styles.css
h1 {
    text-align: center;
    font-size: 90px;
    font-family: sans-serif;
}

6. index.html  
{% load static %}
...
<link href="{% static 'classtoday/styles.css' %}" rel="stylesheet">

